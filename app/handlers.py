from aiogram import F, Router
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery
import app.keyboards as kb
import asyncio
import wikipedia
from app.keyboards import get_article_buttons

router = Router()
SEARCH_TYPES = ("Quick", "Select")
search = SEARCH_TYPES[0]
search_cache = {}  # Foydalanuvchi ID -> maqolalar ro'yxati
user_languages = {}  # Foydalanuvchi ID -> Til


# /start handler
@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer(f"""üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {message.from_user.full_name}!

–ú–µ–Ω—è –∑–æ–≤—É—Ç ü§ñ <b>Wiki Bot</b> ‚Äî —è —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –≥–∏–¥ –ø–æ üìö <b>–í–∏–∫–∏–ø–µ–¥–∏–∏</b>!

üîç –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –ª—é–±–æ–π –∑–∞–ø—Ä–æ—Å ‚Äî –∏ —è –Ω–∞–π–¥—É –¥–ª—è —Ç–µ–±—è –ø–æ–¥—Ö–æ–¥—è—â—É—é —Å—Ç–∞—Ç—å—é!

üìå –í–Ω–∏–∑—É —Ç—ã –º–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å <b>—Ç–∏–ø –ø–æ–∏—Å–∫–∞</b>
–ñ–¥—É —Ç–≤–æ–π –∑–∞–ø—Ä–æ—Å! üòä
""",
                        parse_mode='HTML',
                        reply_markup=kb.main)


# Command handler
@router.message(Command("help"))
async def get_help(message: Message):
    await message.answer('‚ÑπÔ∏è –ù–∞–ø–∏—à–∏ –ª—é–±–æ–µ —Å–ª–æ–≤–æ, –∏ —è –ø–æ–∏—â—É —Å—Ç–∞—Ç—å—é –Ω–∞ –í–∏–∫–∏–ø–µ–¥–∏–∏.')


# F (magic filter) handler
@router.message(F.text == '–ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫')
async def quick_search(message: Message):
    global search
    search = SEARCH_TYPES[0]
    await message.answer('‚úÖ –¢–∏–ø –ø–æ–∏—Å–∫–∞ –≤—ã–±—Ä–∞–Ω: –ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫')


@router.message(F.text == '–ü–æ–∏—Å–∫ —Å—Ç–∞—Ç–µ–π')
async def select_search(message: Message):
    global search
    search = SEARCH_TYPES[1]
    await message.answer('‚úÖ –¢–∏–ø –ø–æ–∏—Å–∫–∞ –≤—ã–±—Ä–∞–Ω: –ü–æ–∏—Å–∫ —Å—Ç–∞—Ç–µ–π')


@router.message(F.text)
async def wiki_answer(message: Message):
    global search_cache

    try:
        if search == SEARCH_TYPES[1]:
            # Foydalanuvchi izlagan maqolalar sarlavhalarini olish
            result_list = await asyncio.to_thread(wikipedia.search, message.text, results=10)
            
            if result_list:
                # Keshga saqlaymiz foydalanuvchi bo‚Äòyicha
                search_cache[message.from_user.id] = result_list

                # Tugmalar uchun sarlavhalarni qisqartirish
                max_title_length = 50  # Tugma nomi maksimal uzunligi
                short_titles = [title[:max_title_length] + "..." if len(title) > max_title_length else title for title in result_list]

                markup = get_article_buttons(short_titles)

                await message.answer("üîé –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Å—Ç–∞—Ç—å–∏:", reply_markup=markup)
            else:
                await message.answer("üòï –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
        else:
            # To‚Äòliq maqola chiqarish
            result = await asyncio.to_thread(wikipedia.summary, message.text)

            # Agar maqola uzun bo'lsa, uni qismlarga bo'lamiz
            max_length = 4096  # Telegramning maksimal uzunligi
            while len(result) > max_length:
                await message.answer(result[:max_length])  # Birinchi qismni yuboramiz
                result = result[max_length:]  # Qolgan qismini keyin yuboramiz


            await message.answer(result)
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: {e}")


@router.callback_query(F.data.startswith("wiki:"))
async def show_article(callback: CallbackQuery):
    title = callback.data.split("wiki:")[1]

    try:
        summary = await asyncio.to_thread(wikipedia.summary, title)

        chunks = [summary[i:i + 4000] for i in range(0, len(summary), 4000)]

        await callback.message.answer(f"<b>{title}</b>", parse_mode='HTML')
        for chunk in chunks:
            await callback.message.answer(chunk)

    except Exception as e:
        await callback.message.answer(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—å—é: {e}")


# Photo handler
@router.message(F.photo)
async def get_photo(message: Message):
    await message.answer(f"üñºÔ∏è –§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ! ID: {message.photo[-1].file_id}")